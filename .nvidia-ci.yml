default:
  tags:
    - type/docker
    - docker/privileged
    - cnt
    - container-dev
    - os/linux

include:
  - local: '.common-ci.yml'

scan:
  stage: scan
  services:
    - docker:dind
  image: "${PULSE_IMAGE}"
  variables:
    IMAGE_ARCHIVE: "gpu-feature-discovery.tar"
  before_script:
    - source version
    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" "${CI_REGISTRY}"
    - docker pull "${CI_REGISTRY_IMAGE}:${VERSION}"
    - docker save "${CI_REGISTRY_IMAGE}:${VERSION}" -o "${IMAGE_ARCHIVE}"
    - AuthHeader=$(echo -n $SSA_CLIENT_ID:$SSA_CLIENT_SECRET | base64 -w0)
    - >
      export SSA_TOKEN=$(curl --request POST --header "Authorization: Basic $AuthHeader" --header "Content-Type: application/x-www-form-urlencoded" ${SSA_ISSUER_URL} | jq ".access_token" |  tr -d '"')
    - if [ -z "$SSA_TOKEN" ]; then exit 1; else echo "SSA_TOKEN set!"; fi
  script:
    - pulse-cli -n $NSPECT_ID --ssa $SSA_TOKEN scan -i $IMAGE_ARCHIVE -p $CONTAINER_POLICY -o
  dependencies:
    - docker_build
    - versionning
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - pulse-cli.log
      - licenses.json
      - sbom.json
      - vulns.json
      - policy_evaluation.json

release:ngc:
  stage: deploy
  image: docker:dind
  services:
    - docker:dind
  before_script:
    - export NGC_REPO="${NGC_REGISTRY}/nvidia"
    - export NGC_PROD_IMAGE="${NGC_REPO}/${DOCKER_IMAGE_NAME}"
  script:
    - source version
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker pull ${CI_REGISTRY_IMAGE}:${VERSION}
    - docker tag ${CI_REGISTRY_IMAGE}:${VERSION} ${NGC_PROD_IMAGE}:${VERSION}
    - docker login -u ${NGC_REGISTRY_USER} -p ${NGC_REGISTRY_TOKEN} ${NGC_REGISTRY}
    - docker push ${NGC_PROD_IMAGE}:${VERSION}
  dependencies:
    - versionning
  only:
    - tags
